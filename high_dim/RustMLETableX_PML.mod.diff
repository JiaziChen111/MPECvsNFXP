--- /Users/fedor/Dropbox/RESEARCH/IRS.shared/EctaComment/code_clean/high_dim/RustBusMLETableX.mod 
+++ /Users/fedor/Dropbox/RESEARCH/IRS.shared/EctaComment/code_clean/high_dim/RustBusMLETableX_PML.mod 
@@ -40,6 +40,9 @@
 param dt {t in T, b in B};	 # decision of bus b at time t
 param xt {t in T, b in B};       # mileage (state) of bus b at time t
 
+#Fixed transition probabilities for partial ML
+param thetaProbs {1..M}
+
 # END OF MODEL and DATA SETUP #
 
 # DEFINING STRUCTURAL PARAMETERS and ENDOGENOUS VARIABLES TO BE SOLVED #
@@ -48,7 +51,8 @@
 var thetaCost >= 0; 
 
 # thetaProbs[i] defines transition probability that mileage in next period moves up (i-1) grid point. M=5 in this example. 
-var thetaProbs {1..M} >= 0; 
+# var thetaProbs {1..M} >= 0; 
+# With partial likelihood thetaProbs are fixed
 
 # Replacement cost
 var RC >= 0;
@@ -57,6 +61,7 @@
 var iniRC;
 var inithetaCost;
 var iniEV;
+# var inithetaProbs;
 
 # DECLARE EQUILIBRIUM CONSTRAINT VARIABLES 
 # The NLP approach requires us to solve equilibrium constraint variables
@@ -117,7 +122,8 @@
 	Bellman_N:  EV[N] = log(exp(CbEV[N])+ exp(-RC + CbEV[1]));
 
 #  The probability parameters in transition process must add to one
-   Probability: sum {i in 1..M} thetaProbs[i] = 1;
+#  Probability: sum {i in 1..M} thetaProbs[i] = 1;
+#	 thetaProbs are fixed in partial ML, so no constraint needed
 
 #  Put bound on EV; this should not bind, but is a cautionary step to help keep algorithm within bounds
      EVBound {i in X}: EV[i] <= 500;
@@ -133,13 +139,14 @@
 Likelihood,
 
 # List the variables
-EV, RC, thetaCost, thetaProbs, Cost, CbEV, PayoffDiff, ProbRegMaint, BellmanViola, 
+# EV, RC, thetaCost, thetaProbs, Cost, CbEV, PayoffDiff, ProbRegMaint, BellmanViola, 
+EV, RC, thetaCost, Cost, CbEV, PayoffDiff, ProbRegMaint, BellmanViola, 
 
 # List the constraints
 Bellman_1toNminusM,
 Bellman_LastM, 
 Bellman_N, 
-Probability,
+# Probability,
 EVBound;
 
 # END OF DEFINING THE MLE OPTIMIZATION PROBLEM
